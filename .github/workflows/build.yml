name: build
on:
  - pull_request
  - push

jobs:
  build:
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            **/.gradle
            !**/.gradle/libs
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: Find correct JAR
        id: findjar
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "jarname=$output" >> $GITHUB_OUTPUT
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.findjar.outputs.jarname }}
          path: build/libs/${{ steps.findjar.outputs.jarname }}
